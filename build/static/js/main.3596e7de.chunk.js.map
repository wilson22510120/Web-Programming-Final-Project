{"version":3,"sources":["img/1.jpg","img/2.jpg","img/3.jpg","img/4.jpg","img/5.jpg","img/6.jpg","img/7.jpg","img/8.jpg","img/back.jpg","img/background.jpg","images.js","img/parchment.jpg","App.js","reportWebVitals.js","index.js"],"names":["back","card1","card2","card3","card4","card5","card6","card7","card8","background","HOST","window","location","origin","replace","client","WebSocket","Option","Select","App","useState","score","setScore","board","setBoard","invisible","setInvisible","alive","setAlive","guessNum","setGuessNum","guess","setGuess","choose","setChoose","extraInput","setExtraInput","status","setStatus","state","setState","playerNames","setPlayerNames","hand","setHand","username","setUsername","body","setBody","seatNo","setseatNo","turn","setTurn","deckNum","setDeckNum","useRef","start","setStart","lastPlay","setLastPlay","onunload","sendData","data","send","JSON","stringify","restart","map","v","canChoose","n","console","log","Number","isInteger","i","playcard","displayStatus","type","msg","prev","onopen","onmessage","message","parse","task","payload","String","newArr","temp","push","s","content","duration","success","info","error","useEffect","className","style","cards","SyncOutlined","spin","display","id","onClick","border","shape","icon","UserAddOutlined","UserDeleteOutlined","size","length","name","placeholder","value","onChange","e","target","marginBottom","disabled","width","indexOf","filter","player","danger","isNaN","visibility","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3596e7de.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/1.c3911d68.jpg\";","export default __webpack_public_path__ + \"static/media/2.a62a550e.jpg\";","export default __webpack_public_path__ + \"static/media/3.56db00c3.jpg\";","export default __webpack_public_path__ + \"static/media/4.429044d9.jpg\";","export default __webpack_public_path__ + \"static/media/5.50530831.jpg\";","export default __webpack_public_path__ + \"static/media/6.3b407138.jpg\";","export default __webpack_public_path__ + \"static/media/7.d4d98984.jpg\";","export default __webpack_public_path__ + \"static/media/8.f87acdd6.jpg\";","export default __webpack_public_path__ + \"static/media/back.fe6d8deb.jpg\";","export default __webpack_public_path__ + \"static/media/background.f4f7cebd.jpg\";","import card1 from './img/1.jpg';\r\nimport card2 from './img/2.jpg';\r\nimport card3 from './img/3.jpg';\r\nimport card4 from './img/4.jpg';\r\nimport card5 from './img/5.jpg';\r\nimport card6 from './img/6.jpg';\r\nimport card7 from './img/7.jpg';\r\nimport card8 from './img/8.jpg';\r\nimport back from './img/back.jpg';\r\nimport background from './img/background.jpg';\r\nimport parchment from './img/parchment.jpg';\r\nexport default [\r\n  back,\r\n  card1,\r\n  card2,\r\n  card3,\r\n  card4,\r\n  card5,\r\n  card6,\r\n  card7,\r\n  card8,\r\n  parchment,\r\n  background\r\n];","export default __webpack_public_path__ + \"static/media/parchment.ddc85023.jpg\";","import './App.css'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\n//import useChat from './useChat'\r\nimport { Button, Input, message, Tag ,Select } from 'antd'\r\nimport {\r\n  CheckCircleOutlined,\r\n  SyncOutlined,\r\n  UserAddOutlined,\r\n  UserDeleteOutlined\r\n  // CloseCircleOutlined,\r\n  // ExclamationCircleOutlined,\r\n  // ClockCircleOutlined,\r\n  // MinusCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport cards from \"./images\";\r\nlet HOST =  window.location.origin.replace(/^http/, 'ws')\r\nconst client = new WebSocket(HOST)\r\nconst { Option } = Select;\r\nfunction App() {\r\n  const [score, setScore] = useState([0,0,0,0])\r\n  const [board, setBoard] = useState([[],[],[],[]])\r\n  const [invisible, setInvisible] = useState([])\r\n  const [alive, setAlive] = useState([])             //array, true if that player is alive\r\n  const [guessNum,setGuessNum] = useState('')        //string, the number guessed when you played 1\r\n  const [guess,setGuess] = useState(false)           //bool, true if need something to type guessNum\r\n  const [choose,setChoose] = useState('')            //string, the player's number you want to cast card\r\n  const [extraInput,setExtraInput] = useState(false) //bool, true if need something to type choose\r\n  const [status, setStatus] = useState({})           //JSON{type, msg}, msg you want to present above the page\r\n  const [state, setState] = useState('lobby')        //string, the state of you right now\r\n  const [playerNames, setPlayerNames] = useState([]) //array, the name of all players on this table\r\n  const [hand, setHand] = useState([])               //array, the card you have\r\n  const [username, setUsername] = useState('')       //string, your name\r\n  const [body, setBody] = useState('')               \r\n  const [seatNo, setseatNo] = useState(-1)\r\n  const [turn, setTurn] = useState(-1)\r\n  const [deckNum, setDeckNum] = useState(16)\r\n  const bodyRef = useRef(null)\r\n  const [start, setStart] = useState(false)\r\n  const [lastPlay, setLastPlay] = useState(-1)\r\n  // useEffect(()=>{\r\n    \r\n  // })\r\n  window.onunload = ()=>{\r\n    sendData(['bye', seatNo])\r\n    return \"bye\"\r\n  }\r\n  \r\n  const sendData = (data) => {\r\n    client.send(JSON.stringify(data))\r\n  }\r\n  const reset = ()=>{\r\n    restart()\r\n    setState(\"lobby\")\r\n    setPlayerNames([])\r\n    setBody('')\r\n    setUsername('')\r\n    setScore([0,0,0,0])\r\n  }\r\n  const restart = ()=>{\r\n    setBoard([[],[],[],[]])\r\n    setInvisible([false, false, false, false])\r\n    setAlive(playerNames.map((v) =>{return (v === 0)?false:true}))            //array, true if that player is alive\r\n    setHand([])               //array, the card you have\r\n    setBody('')\r\n    setDeckNum(-1)\r\n    setDeckNum(16)\r\n    setStart(false)\r\n    setLastPlay(-1)\r\n  }\r\n  const sit = ()=>{\r\n    if(username === ''){\r\n      displayStatus({type: 'error', msg: 'Username can\\'t be empty'})\r\n    }\r\n    else{\r\n      for(let i = 0;i<playerNames.length;i++){\r\n        if(playerNames[i] === 0){\r\n          sendData(['sitDown', [i, username]])\r\n          break\r\n        }\r\n      }\r\n    }\r\n  }\r\n  const leave = ()=>{\r\n    if(seatNo === -1){\r\n      return\r\n      \r\n    }\r\n    sendData(['leave', seatNo])\r\n    setPlayerNames((prev)=>\r\n      prev.map((name, i)=>{\r\n        if(i === seatNo) return 0\r\n        else return name\r\n      })\r\n    )\r\n    setseatNo(-1)\r\n    setState(\"lobby\")\r\n  }\r\n  const play = ()=>{\r\n    if(body !== 1 && body !== 0)\r\n      displayStatus({type: 'error', msg: 'please choose a card to play'})\r\n\r\n    else if(!isNaN(Number(body)) && turn === seatNo)\r\n      playcard(Number(body))\r\n\r\n  }\r\n  const canChoose = (n)=>{\r\n    console.log(invisible, 'aaa')\r\n    if(n === '') {\r\n      console.log(\"n is null\")\r\n      return false\r\n    }\r\n    n = Number(n)\r\n    if(n > 4 || n < 0){\r\n      console.log(\"out of range\")\r\n      return false\r\n    }\r\n    if(!Number.isInteger(n)){\r\n      console.log(\"n is not a interger\")\r\n      return false\r\n    }\r\n    if(!alive[n] || n === seatNo){\r\n      console.log(\"yourself or dead player\")\r\n      return false\r\n    } \r\n    if(invisible[n]){\r\n      let i = (n + 1)%4\r\n      while(i !== n){\r\n        if(alive[i] && i !== seatNo && !invisible[i]){\r\n          return false\r\n        }\r\n        i = (i+1)%4\r\n      }\r\n    }\r\n    return true\r\n  }\r\n  \r\n  const playcard = (i)=>{\r\n\r\n    if(i === 0 || i === 1){\r\n      if(hand[i] === 1){\r\n        if(!canChoose(choose)){\r\n          displayStatus({type: 'error', msg: 'Can\\'t choose that player'})\r\n        }\r\n        else if(!Number.isInteger(Number(guessNum))){\r\n          displayStatus({type: 'error', msg: 'Please input an valid card number'})\r\n        }\r\n        else if(Number(guessNum) > 8 || Number(guessNum) < 1){\r\n          displayStatus({type: 'error', msg: 'Please input an valid card number'})\r\n        }\r\n        else if(Number(guessNum) === 1){\r\n          displayStatus({type: 'error', msg: 'Sorry, you can\\'t guess card 1'})\r\n        }\r\n        else{\r\n          sendData(['play', [hand[i], choose, guessNum]])\r\n          setBody('')\r\n          setGuessNum('')\r\n          setHand((prev)=>{\r\n            if(i === 0) return [prev[1]]\r\n            else return [prev[0]]\r\n          })\r\n        }\r\n      }\r\n      else if(hand[i] === 2){\r\n        \r\n        if(!canChoose(choose)){\r\n          displayStatus({type: 'error', msg: 'Can\\'t choose that player'})\r\n        }\r\n        else{\r\n          sendData(['play', [hand[i], choose]])\r\n          setBody('')\r\n          setHand((prev)=>{\r\n            if(i === 0) return [prev[1]]\r\n            else return [prev[0]]\r\n          })\r\n          \r\n        }\r\n      }\r\n      else if(hand[i] === 3){\r\n        if(!canChoose(choose)){\r\n          displayStatus({type: 'error', msg: 'Can\\'t choose that player'})\r\n        }\r\n        \r\n        else{\r\n          sendData(['play', [hand[i], Number(choose), Number(hand[1-i])]])\r\n          setBody('')\r\n          setHand((prev)=>{\r\n            if(i === 0) return [prev[1]]\r\n            else return [prev[0]]\r\n          })\r\n        }\r\n      }\r\n      else if(hand[i] === 4){\r\n        sendData(['play', [hand[i]]])\r\n        setBody('')\r\n        setHand((prev)=>{\r\n          if(i === 0) return [prev[1]]\r\n          else return [prev[0]]\r\n        })\r\n      }\r\n      else if(hand[i] === 5){\r\n        if(hand[1-i] === 7){\r\n          displayStatus({type: 'error', msg: 'You have to play card 7'})\r\n        \r\n        }\r\n        else if(!canChoose(choose)){\r\n          displayStatus({type: 'error', msg: 'Can\\'t choose that player'})\r\n        }\r\n        else{\r\n          sendData(['play', [hand[i], Number(choose)]])\r\n          setBody('')\r\n          setHand((prev)=>{\r\n            if(i === 0) return [prev[1]]\r\n            else return [prev[0]]\r\n          })\r\n        }\r\n      }\r\n      else if(hand[i] === 6){\r\n        if(hand[1-i] === 7){\r\n          displayStatus({type: 'error', msg: 'You have to play card 7'})\r\n        \r\n        }\r\n        else if(!canChoose(choose)){\r\n          displayStatus({type: 'error', msg: 'Can\\'t choose that player'})\r\n        }\r\n        else{\r\n          sendData(['play', [hand[i], Number(choose), hand[1-i]]])\r\n          setBody('')\r\n          setHand((prev)=>{\r\n            if(i === 0) return [prev[1]]\r\n            else return [prev[0]]\r\n          })\r\n        }\r\n      }\r\n      else if(hand[i] === 7){\r\n        \r\n        sendData(['play', [hand[i]]])\r\n        setBody('')\r\n        setHand((prev)=>{\r\n          if(i === 0) return [prev[1]]\r\n          else return [prev[0]]\r\n        })\r\n        \r\n      }\r\n      else if(hand[i] === 8){\r\n        setBody('')\r\n        displayStatus({type: 'error', msg: 'AAAAAAAAAA'})\r\n      }\r\n      \r\n    }\r\n    else{\r\n      setStatus({type:'error', msg:'AAAAA'})\r\n    }\r\n  }\r\n  \r\n  \r\n  client.onopen = ()=>{\r\n    sendData(['init'])\r\n  }\r\n  client.onmessage = (message) => {\r\n    const { data } = message\r\n    const [task, payload] = JSON.parse(data)\r\n    console.log(task)\r\n    switch (task) {\r\n      case 'status':{\r\n        setStatus(payload)\r\n        break\r\n      }\r\n      case 'reset':{\r\n        setStatus({type:'error', msg:'Somebody left the game, redirect to lobby now...'})\r\n        reset()\r\n        \r\n      }\r\n      case 'seat':{\r\n        setPlayerNames(payload.map((v) =>{return (v === '')?0:v}))\r\n        setAlive(payload.map((v) =>{return (v === '')?false:true}))\r\n        setInvisible(()=>payload.map(() =>{return false}))\r\n        break\r\n      }\r\n      case 'deckNum':{\r\n        setDeckNum(payload)\r\n        break\r\n      }\r\n      case 'sitSuccess':{\r\n        \r\n        setseatNo(payload)\r\n        setState('waiting for start...')\r\n        break\r\n      }\r\n      case 'turn':{\r\n        console.log(state)\r\n        setStart(true)\r\n        if(payload === seatNo) setState('Your turn!!')\r\n        else if(alive[seatNo]) setState('wait')\r\n        setInvisible((prev)=>\r\n          //console.log(prev,'aaaaaa')\r\n          prev.map((v, i)=>{\r\n          return ((i !== payload) && v)\r\n        }))\r\n        setTurn(payload)\r\n        break\r\n      }\r\n      case 'draw':{\r\n        setHand(() => [...hand, payload])\r\n        break\r\n      }\r\n      case 'win':{\r\n        setScore((prev)=>\r\n          prev.map((v, i)=>{\r\n          return (i === payload)?v+1 : v\r\n        }))\r\n        if(payload === seatNo){\r\n          //console.log('aaaaa')\r\n          setState('Your Win!')\r\n        }\r\n        else{\r\n          setState('Player'+String(payload)+' Won!!')\r\n        }\r\n        restart()\r\n        break\r\n      }\r\n      case 'lose':{\r\n        \r\n        if(payload === seatNo){\r\n          //console.log('aaaaa')\r\n          setState('Your lost!')\r\n        }\r\n        let newArr = [...alive]\r\n        newArr[payload] = false\r\n        setAlive(newArr)\r\n        \r\n        displayStatus({type:\"info\", msg:\"player\"+String(payload)+\" has been eliminated\"})\r\n        \r\n        break\r\n      }\r\n      case 'invisible':{\r\n        setInvisible((prev)=>prev.map((v, i)=>{\r\n          return ((i === payload) || v)\r\n        }))\r\n        break\r\n      }\r\n      case 'discard':{\r\n        setHand(()=>[])\r\n        break\r\n      }\r\n      case 'lastPlay':{\r\n        setLastPlay(payload)\r\n        break\r\n      }\r\n      case 'setHand':{\r\n        setHand(()=>[payload])\r\n        break\r\n      }\r\n      case 'boardUpdate':{\r\n        console.log('in')\r\n        let temp = [...board]\r\n        temp[payload[0]].push(payload[1])\r\n        setBoard(()=>temp)\r\n        break\r\n      }\r\n      case 'error':{\r\n        displayStatus({type:\"error\", msg:payload})\r\n\r\n        break\r\n      }\r\n      default:\r\n        break\r\n    }\r\n  }\r\n  \r\n  const displayStatus = (s) => {\r\n    if (s.msg) {\r\n      const { type, msg } = s\r\n      const content = {\r\n        content: msg,\r\n        duration: 2\r\n      }\r\n\r\n      switch (type) {\r\n        case 'success':\r\n          message.success(content)\r\n          break\r\n        case 'info':\r\n          message.info(content)\r\n          break\r\n        case 'danger':\r\n        default:\r\n          message.error(content)\r\n          break\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(turn === seatNo && body!==''&&(Number(body) === 1 ||Number(body) === 0)){\r\n      if(hand[Number(body)]===1||hand[Number(body)]===2||hand[Number(body)]===3||\r\n      hand[Number(body)]===5||hand[Number(body)]===6){\r\n        if(hand[Number(body)]===1){\r\n          setGuess(true)\r\n        }\r\n        else setGuess(false)\r\n        setExtraInput(true)\r\n      }\r\n      else{\r\n        setGuess(false)\r\n        setExtraInput(false)\r\n      }\r\n    }\r\n    else{\r\n      setGuess(false)\r\n      setExtraInput(false)\r\n    }\r\n    //console.log(alive)\r\n    \r\n      \r\n  }, [body,turn,seatNo,hand])\r\n  useEffect(() => {\r\n    displayStatus(status)\r\n  }, [status])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"App-title\">\r\n        <h1>{state}</h1>\r\n      </div>\r\n      <div className=\"App-main\">\r\n        <div className=\"playertableA\" >\r\n          <div className=\"playertablename\" \r\n          style={{\r\n            \"textDecoration\": !start || (alive[seatNo])?\"\":(\"line-through\"),\r\n            \"backgroundImage\": `url(${cards[9]})`\r\n          }}>\r\n            \r\n            {playerNames[(seatNo+4)%4] !== 0 ? playerNames[(seatNo+4)%4]+\"/\"+score[seatNo]:(!start ? \"(waiting for player...)\":\"\")}\r\n            <SyncOutlined spin style={{display:((start && seatNo === turn)?\"\":\"none\")}}/>\r\n            \r\n          </div>\r\n          <div>\r\n            \r\n            <div \r\n              id=\"playertableA1\" \r\n              className=\"playercardA\" \r\n              onClick={turn === seatNo&&start?() =>{setBody(0)}:()=>{}} \r\n              style={{\"backgroundImage\" :  !start || !alive[seatNo]?\"none\":`url(${cards[hand[0]]})`, border: body === 0 ? \"3px groove white\":\"\" }}>\r\n            </div>\r\n            \r\n            <div \r\n              id=\"playertableA2\" \r\n              className=\"playercardA\" \r\n              onClick={turn === seatNo&&start?() =>{setBody(1)}:()=>{}} \r\n              style={{\"backgroundImage\" : !start || turn !== seatNo ? \"none\":`url(${cards[hand[1]]})`,  border: body === 1 ? \"3px groove white\":\"\" }}>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"playertableB\" >\r\n          <div \r\n            className=\"playertablename\"  \r\n            style={{\r\n              \"textDecoration\": !start || (alive[(seatNo+1)%4])?\"\":\"line-through\", \r\n              \"backgroundImage\": !start || playerNames[(seatNo+1)%4] !== 0 ? `url(${cards[9]})` : \"\"\r\n            }}>\r\n            {playerNames[(seatNo+1)%4] !== 0 ? playerNames[(seatNo+1)%4]+\"/\"+score[(seatNo+1)%4] :   (!start) ? \"(waiting for player...)\":\"\"}\r\n            <SyncOutlined spin style={{display:((start && (seatNo+1)%4 === turn)?\"\":\"none\")}}/>\r\n          </div>\r\n          <div>\r\n            \r\n            <div \r\n              id=\"playertableB1\" \r\n              className=\"playercard\" \r\n              style={{\"backgroundImage\" : !start || !alive[(seatNo+1)%4] ? \"none\" : `url(${cards[0]})`}}>\r\n            </div>\r\n            <div \r\n              id=\"playertableB2\" \r\n              className=\"playercard\" \r\n              style={{\"backgroundImage\" :  !start || turn !== (seatNo+1)%4 || !alive[(seatNo+1)%4] ? \"none\" : `url(${cards[0]})` }}>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"playertableC\" >\r\n          <div \r\n            className=\"playertablename\"  \r\n            style={{\r\n              \"textDecoration\": !start || (alive[(seatNo+2)%4])?\"\":\"line-through\", \r\n              \"backgroundImage\": !start || playerNames[(seatNo+2)%4] !== 0 ? `url(${cards[9]})` : \"\"\r\n          }}>\r\n            {playerNames[(seatNo+2)%4] !== 0 ? playerNames[(seatNo+2)%4]+\"/\"+score[(seatNo+2)%4] : (!start ? \"(waiting for player...)\":\"\")}\r\n            <SyncOutlined spin style={{display:((start && (seatNo+2)%4 === turn)?\"\":\"none\")}}/>\r\n          </div>\r\n          <div>\r\n            \r\n            <div \r\n              id=\"playertableC1\" \r\n              className=\"playercard\" \r\n              style={{\"backgroundImage\" : !start || !alive[(seatNo+2)%4] ? \"none\" : `url(${cards[0]})`}}>\r\n            </div>\r\n            <div \r\n              id=\"playertableC2\" \r\n              className=\"playercard\" \r\n              style={{\"backgroundImage\" :  !start || turn !== (seatNo+2)%4 || !alive[(seatNo+2)%4] ? \"none\" : `url(${cards[0]})` }}>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"playertableD\" >\r\n          <div \r\n            className=\"playertablename\"  \r\n            style={{\r\n              \"textDecoration\": !start || (alive[(seatNo+3)%4])?\"\":\"line-through\", \r\n              \"backgroundImage\": !start || playerNames[(seatNo+3)%4] !== 0 ? `url(${cards[9]})` : \"\"\r\n          }}>\r\n            {playerNames[(seatNo+3)%4] !== 0 ? playerNames[(seatNo+3)%4]+\"/\"+score[(seatNo+2)%4] :  (!start ? \"(waiting for player...)\" : \"\")}\r\n            <SyncOutlined spin style={{display:((start && (seatNo+3)%4 === turn)?\"\":\"none\")}}/>\r\n          \r\n          </div>\r\n          <div>\r\n            \r\n            <div id=\"playertableD1\" \r\n              className=\"playercard\" \r\n              style={{\"backgroundImage\" : !start || !alive[(seatNo+3)%4] ? \"none\" : `url(${cards[0]})`}}>\r\n            </div>\r\n            <div id=\"playertableD2\" \r\n              className=\"playercard\" \r\n              style={{\"backgroundImage\" :  !start || turn !== (seatNo+3)%4 || !alive[(seatNo+3)%4] ? \"none\" : `url(${cards[0]})` }}>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{\"background-color\":\"white\", \"display\":((state===\"lobby\"||state===\"waiting for start...\")?\"\":\"none\")}}>\r\n          <Button id=\"sitButton\" \r\n\r\n            type={seatNo===-1?\"\":\"primary\"} \r\n            shape=\"circle\" \r\n            icon={seatNo===-1?<UserAddOutlined />:<UserDeleteOutlined />} \r\n            size={\"large\"}\r\n            onClick={seatNo===-1?sit:leave}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"tablecenter\" style={state === \"wait\" || state === \"Your turn!!\"?{}:{display:\"none\"}}>\r\n          <div className=\"discardpile\">\r\n            <div className=\"lastplayed\" >Last played</div>\r\n            <div className=\"cardlastplayed\" style={{\"backgroundImage\": (lastPlay!==-1?`url(${cards[lastPlay]})`:\"none\")}}>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"deck\">\r\n            <div className=\"cardremaining\">{\"Deck(x\"+String(deckNum)+\")\"}</div>\r\n            <div className=\"deckcard\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      \r\n      <div style={!start ?{}:{display:\"none\"}}>\r\n        <Input\r\n        className=\"input\"\r\n          placeholder=\"Username\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          style={{ marginBottom: 10}}\r\n          \r\n          disabled={state !== \"lobby\"}\r\n        ></Input>\r\n        \r\n      </div>\r\n      <div>\r\n        <Select \r\n          className=\"select\"\r\n          placeholder=\"Select a player\" \r\n          style={extraInput?{ width: 180 }:{ display:\"none\" }}\r\n          onChange={(e) => {\r\n            setChoose(playerNames.indexOf(e))\r\n          }}>\r\n          {playerNames.filter((player)=>{return (player !== 0 && player !== username && alive[playerNames.indexOf(player)])}).map((player, i) =>(\r\n            <Option className=\"option\" value={player}>\r\n              {player}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n        <Select\r\n          className=\"select\"\r\n          placeholder=\"Select a card number\" \r\n          style={guess?{width: 180}:{display:\"none\"}}\r\n          onChange={(e) => setGuessNum(e)}  \r\n        >\r\n            <Option className=\"option\" value=\"2\"> 2 </Option>\r\n            <Option className=\"option\" value=\"3\"> 3 </Option>\r\n            <Option className=\"option\" value=\"4\"> 4 </Option>\r\n            <Option className=\"option\" value=\"5\"> 5 </Option>\r\n            <Option className=\"option\" value=\"6\"> 6 </Option>\r\n            <Option className=\"option\" value=\"7\"> 7 </Option>\r\n            <Option className=\"option\" value=\"8\"> 8 </Option>\r\n        </Select>\r\n      </div> \r\n      <div>\r\n        <button className=\"button\" onClick={()=>console.log(start, alive)}>\r\n          aaa\r\n        </button>\r\n        {!start?\r\n          <Button className=\"button\" type=\"primary\" onClick={() => {setStart(true); sendData(['start'])}} style={!start&&seatNo!==-1?{}:{visibility:\"hidden\"}}>\r\n            Start\r\n          </Button>:\r\n          <Button className=\"button\" type=\"primary\" danger onClick={play} style={state === \"Your turn!!\" ?{}:{visibility:\"hidden\"}}>\r\n            Play\r\n          </Button>\r\n        }\r\n        \r\n        \r\n        \r\n             \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport 'antd/dist/antd.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}